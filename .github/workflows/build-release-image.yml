name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
    - name: Login to Github Packages
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Push Image
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/arm64
        tags: |
          ghcr.io/rdbatch02/lmp-server-docker-arm:latest
          ghcr.io/rdbatch02/lmp-server-docker-arm:${{ steps.vars.outputs.sha_short }}
        push: ${{ github.ref == 'refs/heads/main' }}
  release_zip:
    needs: build_image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Build Zip
      run: ./zip-artifacts.sh
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prelease: false
        release_name: ${{ steps.vars.outputs.sha_short }}
        tag_name: ${{ steps.vars.outputs.sha_short }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Zip to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./lmp-server-docker.zip
        asset_name: lmp-server-docker.zip
        asset_content_type: application/zip